{
  "hash": "20d516890f2a8f493abd42b0a215e767",
  "result": {
    "markdown": "---\ntitle: \"Hardee's and Carl's Jr. Great Divide\"\ndescription: \"Day 15 of the #30DayMapChallenge - Food and Drink\"\nauthor: \"Michelle Evans\"\ndate: \"2022-11-15\"\ndraft: false\nimage: burger-header.jpg\nexecute:\n  warning: false\n  message: false\n---\n\n\n\n![Photo by <a href=\"https://unsplash.com/@jonathanborba?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Jonathan Borba</a> on <a href=\"https://unsplash.com/s/photos/fast-food?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Unsplash</a>](burger-header.jpg)\n  \n\n\n\n\n\nThe topic for day 15 was food. If you've ever driven across the country, you may have had the Mandela-effect like feeling when you come across a Hardee's or Carl's Jr. They seem almost exactly the same: similar fonts, same smiling little star, and identical menus. But they are conceivably different restaurants? [Long story short](https://www.mentalfloss.com/article/63291/whats-difference-between-hardees-and-carls-jr), they merged nearly twenty years ago, and kept the franchise names to not disrupt the markets and fan bases on their respective coasts. Essentially, it's the second-most famous East vs. West coast beef, and I wanted to make a map of the dividing line based on distance to the nearest Hardee's or Carl's Jr.\n\nI used data from [fastfoodmaps.com](http://www.fastfoodmaps.com/) to get the location of all the restaurants, and then created rasters of Euclidean distance to each restaurant.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfood.locs <- read.csv(\"fastfoodmaps_locations_2007.csv\", header = F) |>\n  #limit to just Hardee and Carls Jr\n  filter(V2 %in% c(\"c\", \"h\")) |>\n  #limit to just continentental US\n  filter(!(V5 %in% c(\"HI\", \"AK\"))) |>\n  select(V2, V8, V9) \n\nfood.sf <- st_as_sf(food.locs, coords = c(\"V9\", \"V8\"), crs = 4326)\n\n#create raster template\nusa.poly <- st_as_sf(maps::map(\"usa\", fill=TRUE, plot =FALSE)) |>\n  filter(ID == \"main\")\nusa.bbox <- st_bbox(usa.poly)\n\n#a finer resolution will make distance calculations take longer\nus.rast <- rast(crs = \"epsg:4326\", resolution = 0.33333, \n                xmin = usa.bbox$xmin, xmax = usa.bbox$xmax, \n                     ymin = usa.bbox$ymin, ymax = usa.bbox$ymax)\nvalues(us.rast) <- 1\n\ndist.h.base <- distance(x = us.rast, y = vect(filter(food.sf, V2 == \"h\")))\ndist.c.base <- distance(x = us.rast, y = vect(filter(food.sf, V2 == \"c\")))\ndist.h.base <- dist.h.base/1000\ndist.c.base <- dist.c.base/1000\n\np1 <- ggplot() +\n  geom_spatraster(data = mask(dist.h.base, vect(usa.poly))) +\n  ggtitle(\"Distance to Hardee's\") +\n  scale_fill_viridis_c(na.value = NA) +\n  theme_void()\np2 <- ggplot() +\n  geom_spatraster(data = mask(dist.c.base, vect(usa.poly))) +\n  ggtitle(\"Distance to Carl's Jr.\") +\n  scale_fill_viridis_c(na.value = NA) +\n  theme_void()\n\np1 + p2\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nI then wanted mask out those pixels where the other restaurant was closer, essentially trying to create a raster for each side of the United States. I did this using some simple raster logic, where any pixels where the other restaurant was closer became `NA`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#create raster to identify which is closest\nh.closer <- dist.h.base<dist.c.base\n\ndist.c <- dist.c.base\ndist.h <- dist.h.base\ndist.c[h.closer] <- NA\ndist.h[!h.closer] <- NA\n#mask so it is just US outline\ndist.c.mask <- mask(dist.c, vect(usa.poly))\ndist.h.mask <- mask(dist.h, vect(usa.poly))\n\np1 <- ggplot() +\n  geom_spatraster(data = dist.h.mask) +\n  ggtitle(\"Distance to Hardee's\") +\n  scale_fill_viridis_c(na.value = NA) +\n  theme_void()\n\np2 <- ggplot() +\n  geom_spatraster(data = dist.c.mask) +\n  ggtitle(\"Distance to Carl's Jr.\") +\n  scale_fill_viridis_c(na.value = NA) +\n  theme_void()\n\np1 +p2\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nThe last bit of spatial data creation I did was the creation of the dividing line between the two rasters. There are many ways to do this, but these are the steps I followed:\n\n- created a polygon that represented the outline of all non-`NA` values in each raster using `as.polygons`\n- created a buffer around that polygon via `st_buffer`\n- identified the overlap between the two buffered polygons using `st_intersection`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncarl.poly.r <- dist.c.mask\ncarl.poly.r[!is.na(carl.poly.r)] <- 1\ncarl.poly <- as.polygons(carl.poly.r, dissolve = T) %>%\n  st_as_sf() %>%\n  st_buffer(dist = 20000)\n\nhard.poly.r <- dist.h.mask\nhard.poly.r[!is.na(hard.poly.r)] <- 1\nhard.poly <- as.polygons(hard.poly.r, dissolve = T) %>%\n  st_as_sf() %>%\n  st_buffer(dist = 20000)\n\n#find commonality to get dividing line\nboundary <- st_intersection(hard.poly, carl.poly)\n```\n:::\n\n\nFinally, it was just plotting it all:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#define some things outside of the plot call for easier readability\nbg.col <- \"gray10\"\nfact.caption <- \"Hardee's and Carl's Jr. merged in 1997. The menu is now the same, but which one you eat at depends on where you live.\"\ncaption.lab <- paste0(\"#30DayMapChallenge \",\n                      \"<b> Source: </b>fastfoodmaps.com &nbsp; &nbsp;  | &nbsp;  &nbsp; \",\n                      \"<span style='font-family:fa-brands;'>&#xf113;</span> mvevans89\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n    geom_spatraster(data = dist.h.mask) +\n  scale_fill_distiller(palette = \"Blues\", na.value = NA, name = \"Distance to Hardee's\") +\n    ggnewscale::new_scale_fill() +\n  geom_spatraster(data = dist.c.mask) +\n  scale_fill_distiller(palette = \"Reds\", na.value = NA, name = \"Distance to Carl's Jr.\")+\n  geom_sf(data = boundary, color = \"black\", fill = \"white\") +\n  labs(title = \"A Nation Divided\",\n       caption = caption.lab) +\n  annotate(geom = \"text\", x = -120, y = 27, label = stringr::str_wrap(fact.caption, 35),\n           col = \"white\", size = 4) +\n  geom_richtext(aes(label = \"<img src='carls.png' width='80'/>\", x = -110, y = 35), \n                fill = NA, color = NA) +\n    geom_richtext(aes(label = \"<img src='hardees.png' width='80'/>\", x = -85, y = 38), \n                fill = NA, color = NA) +\n  theme_void() +\n  theme(legend.position = \"bottom\",\n        panel.background = element_rect(fill = bg.col, color = NA),\n        plot.background = element_rect(fill = bg.col, color = NA),\n        legend.background = element_rect(fill = bg.col, color = NA),\n        legend.text = element_text(color = \"white\"),\n        legend.title = element_text(color = \"white\"),\n        plot.caption  = element_markdown(family = \"sans\", hjust = 0.5, size = 9,\n                                         color = \"gray80\"),\n        plot.title = element_text(color = \"white\", size = 24, hjust = 0.5),\n        legend.direction = \"horizontal\")\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n![](fastfoodnation.png){fig-align=\"center\" width=20cm}",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}