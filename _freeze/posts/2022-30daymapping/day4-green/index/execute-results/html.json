{
  "hash": "1d73caf47ab1527f84017b160878882f",
  "result": {
    "markdown": "---\ntitle: \"Exploring Rainforests with Rayshader\"\ndescription: \"Day 4 of the #30DayMapChallenge - Something Green\"\nauthor: \"Michelle Evans\"\ndate: \"2022-11-04\"\ndraft: false\nimage: rayshade-static.png\nexecute:\n  warning: false\n  message: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(sf)\nlibrary(raster)\nlibrary(rayshader)\n\n\nlibrary(dplyr)\n```\n:::\n\n\nToday's challenge was to map something green. I've been meaning to play around with `rayshader` a bit and had a nice elevation map of Ranomafana, Madagascar on hand so decided that would be a good start. I used a buffer created around a point I chose to get a nice gradient of elevation near Ranomafana.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndem <- raster(\"rano_dem.tif\")\n\n#crop it to zoom in a bit on Ranomafana\nbuffer <- data.frame(lon = 47.2,\n                     lat = -21.255) %>%\n  st_as_sf(coords = c(\"lon\", \"lat\")) %>%\n  st_buffer(dist = 0.1)\n\ndem.crop <- crop(dem, buffer)\nplot(dem.crop)\nplot(buffer, add = T)\n```\n\n```{.r .cell-code}\n#transform into matrix for rayshader\ndem.mat <- raster_to_matrix(dem.crop)\n```\n:::\n\n\n`rayshader` comes with some built-in texture/colors for the maps, but I wanted one that was a bit more **green** given the days' theme. I created a custom one using `create_texture`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nforest.texture <- create_texture(lightcolor = \"#163611\",\n                                   shadowcolor = \"#071104\",\n                                   leftcolor = \"#081c05\",\n                                   rightcolor = \"#162d0d\",\n                                   centercolor = \"#228062\")\ndem.mat %>%\n  sphere_shade(sunangle = 35, texture = forest.texture) %>%\n  plot_3d(heightmap = dem.mat, zscale = 30, fov = 0, theta = 45, zoom = 0.7, phi = 30, \n          windowsize = c(1000, 800), water = F, baseshape = \"hex\", background = \"black\")\n\nrender_snapshot(clear = F)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\nrender_snapshot(\"rayshade-static.png\", clear = T)\n```\n:::\n\n\nMake it spin! There is a function that does this already, `render_movie()`, but I wanted mine saved as a `gif` instead of an `avi` file, so I used some custom code from [Will Bishop](https://wcmbishop.github.io/rayshader-demo/).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#source custom function\nlibrary(devtools)\nsource_url(\"https://raw.githubusercontent.com/wcmbishop/rayshader-demo/master/R/rayshader-gif.R\")\nn.frames <- 90\n#theta is angle of spin\nthetas <- seq(0, 360, length.out = n.frames)\n\ndem.mat %>%\n  sphere_shade(sunangle = 35, texture = forest.texture) %>%\n  # plot_3d(heightmap = dem.mat, zscale = 30, fov = 0, zoom = 0.7, phi = 30, \n  #         windowsize = c(1000, 800), water = F, baseshape = \"hex\", background = \"black\") %>%\n\n  save_3d_gif(dem.mat, file = \"spin-ray.gif\", duration = 6,\n              solid = TRUE, shadow = TRUE, zscale = 30,\n              theta = thetas, phi = 30, background = \"black\", baseshape = \"hex\")\n```\n:::\n\n\n![](spin-ray.gif)",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}