{
  "hash": "dd2fffb744f8766fb9646df270b34dd3",
  "result": {
    "markdown": "---\ntitle: \"Ukraine: The Center of Europe\"\ndescription: \"Day 5 of the #30DayMapChallenge - Ukraine\"\nauthor: \"Michelle Evans\"\ndate: \"2022-11-05\"\ndraft: false\nimage: ukraine-center.png\nexecute:\n  warning: false\n  message: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(rnaturalearth)\nlibrary(sf)\nlibrary(ggtext)\nlibrary(showtext)\n\n#add font awesome\nfont_add('fa-brands', here::here('fonts/fa-brands-400.ttf'))\nshowtext_auto()\n\nlibrary(dplyr)\n```\n:::\n\n\nToday's challenge is a map about Ukraine. I learned recently that there is a point in Ukraine considered the geographic midpoint of Europe. Then, I did some research today and learned this is a [highly debated topic](https://en.wikipedia.org/wiki/Geographical_midpoint_of_Europe), not least of which because the definition of 'Europe' really depends on who you talk to. But I was already committed to the idea. For this, I manually georeferenced some points that seemed to be on the edge of Europe, at least to this non-European currently residing in Europe. I then plotted it over a basemap from the `rnaturalearth` package and used the `sf` package to add some lines.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#download basemap of the world\nworld.map <- ne_countries(scale = 110, returnclass = 'sf') %>%\n  st_transform(crs = 3035)\n\n#identify center\ncenter <- data.frame(lon = 23.833, lat = 48.5) %>%\n  st_as_sf(coords = c(\"lon\", \"lat\"), crs = 4326) %>%\n  #transform to do in meters\n  st_transform(3035)\n\n#identify edges\nn <- data.frame(lat = 71.095089, lon = 25.783898) %>%\n    st_as_sf(coords = c(\"lon\", \"lat\"), crs = 4326) %>%\n  #transform to do in meters\n  st_transform(3035) %>%\n  mutate(position = \"North\")\nsw <- data.frame(lat = 37.033281, lon = -8.918422) %>%\n    st_as_sf(coords = c(\"lon\", \"lat\"), crs = 4326) %>%\n  #transform to do in meters\n  st_transform(3035) %>%\n  mutate(position = \"Southwest\")\nse <- data.frame(lat = 34.928006, lon = 24.857155) %>%\n    st_as_sf(coords = c(\"lon\", \"lat\"), crs = 4326) %>%\n  #transform to do in meters\n  st_transform(3035) %>%\n  mutate(position = \"Southeast\")\nnw <- data.frame(lat = 65.852065, lon = -23.589617) %>%\n    st_as_sf(coords = c(\"lon\", \"lat\"), crs = 4326) %>%\n  #transform to do in meters\n  st_transform(3035) %>%\n  mutate(position = \"Northwest\")\ne <- data.frame(lat = 57.880922, lon = 56.307665) %>%\n    st_as_sf(coords = c(\"lon\", \"lat\"), crs = 4326) %>%\n  #transform to do in meters\n  st_transform(3035) %>%\n  mutate(position = \"East\")\n\nedges <- bind_rows(n, sw, se, nw, e)\n\nmap.bbox <- st_bbox(st_buffer(edges, 5e5))\n\n#create distance lines\ndist.lines <- st_sfc(mapply(function(a,b){st_cast(st_union(a,b),\"LINESTRING\")}, center$geometry, edges$geometry, SIMPLIFY=FALSE)) %>%\n  st_as_sf(crs = 3035) %>%\n  mutate(length_km = round(st_length(.)/1e3))\n\n#define caption for easier reading\ncaption.lab <- paste0(\"#30DayMapChallenge<br>\",\n                      \"<b>Source: </b><span style='font-family:mono;'>rnaturalearth</span><br>\",\n                      \"<span style='font-family:fa-brands;'>&#xf113;</span> mvevans89\")\n\n\nggplot() +\n  geom_sf(data = world.map, fill = \"gray20\", color = NA, size = 0.6) +\n  geom_sf(data = center, color = \"white\", size = 3) +\n  geom_sf(data = dist.lines, color = \"gray80\", linetype = 21) +\n  geom_sf(data = edges, color = \"white\", size = 2, shape = 21) +\n  coord_sf(xlim = map.bbox[c(1,3)], ylim = map.bbox[c(2,4)]) +\n  annotate(x = st_coordinates(center)[1]+2e5, y = st_coordinates(center)[2]-3e5,\n                                      geom = \"text\", label = \"Rakhiv, Ukraine\\nEurope's Center\\n(Maybe)\",\n           color = \"gray90\", hjust = 0, size = 3.5, family = \"mono\") +\n  geom_richtext(data = data.frame(x = map.bbox[c(1)] - 3e5, \n                           y = map.bbox[c(2)] + 5e4), \n                aes(x = x, y = y, label = caption.lab), fill = NA, label.color = NA,\n                color = \"gray90\", size = 2.5, hjust = 0) +\n  theme(panel.background = element_rect(fill = \"gray40\"),\n        panel.grid.major = element_line(color = \"gray30\"),\n        # axis.text = element_blank(),\n        axis.title = element_blank(),\n        axis.ticks = element_blank()) \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}